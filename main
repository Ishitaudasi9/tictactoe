import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

public class tictactoe {
	static ArrayList<Integer> playerpositions=new ArrayList<Integer>();
	static ArrayList<Integer> cpupositions=new ArrayList<Integer>();
	public static void main(String args[])
	{
		char[][] gameboard= {{' ','|',' ','|',' '},
				{'-','+','-','+','-'},
		        {' ','|',' ','|',' '},
		        {'-','+','-','+','-'},
		        {' ','|',' ','|',' '}};
		printgameboard(gameboard);
		while(true) {
			Scanner scan=new Scanner(System.in);
		System.out.println("enter your placement 1-9");
		int playerpos=scan.nextInt();
		while(playerpositions.contains(playerpos)||cpupositions.contains(playerpositions)) {
			System.out.println("position taken. enter correct position");
		playerpos=scan.nextInt();
		}
		placepiece(gameboard, playerpos, "player");
		
		Random rand=new Random();
		int cpupos=rand.nextInt(9)+1;
		while(playerpositions.contains(cpupos)||cpupositions.contains(cpupositions)) {
	    cpupos=rand.nextInt(9)+1;
		}
		placepiece(gameboard, cpupos, "cpu");
		printgameboard(gameboard);
		 String result=checkwinner();
		 System.out.println(result);
		}
		
		}
		
public static void printgameboard(char[][] gameboard) {
	for(char[] row : gameboard) {
		for(char c : row) {
			System.out.print(c);
		}
			System.out.println();
		}
}

public static void placepiece(char[][] gameboard, int pos, String user)
{
	char symbol= ' ';
	if(user.equals("player"))
	{
		symbol= 'X';
		playerpositions.add(pos);
	}
	else if(user.equals("cpu"))
	{
		symbol= 'O';
		cpupositions.add(pos);
	}
		
	switch(pos){
	case 1:
		gameboard[0][0]= symbol;
		break;
	case 2:
		gameboard[0][2]= symbol;
	break;
	case 3:
		gameboard[0][4]= symbol;;
		break;
	case 4:
		gameboard[2][0]= symbol;
		break;
	case 5:
		gameboard[2][2]= symbol;
		break;
	case 6:
		gameboard[2][4]= symbol;
		break;
	case 7:
		gameboard[4][0]= symbol;
		break;
	case 8:
		gameboard[4][2]= symbol;
		break;
	case 9:
		gameboard[4][4]= symbol;
		break;
		default:
		break;
}
}
public static String checkwinner(){
	List toprow= Arrays.asList(1,2,3);
	List midrow= Arrays.asList(4,5,6);
	List botrow= Arrays.asList(7,8,9);
	List leftcol=Arrays.asList(1,4,7);
	List midcol= Arrays.asList(2,5,8);
	List rightcol= Arrays.asList(3,6,9);
	List cross1= Arrays.asList(1,5,9);
	List cross2= Arrays.asList(7,5,3);
	List<List>winning=new ArrayList<List>();
	winning.add(toprow);
	winning.add(midrow);
	winning.add(botrow);
	winning.add(leftcol);
	winning.add(midcol);
	winning.add(rightcol);
	winning.add(cross1);
	winning.add(cross2);
	
	for(List l: winning)
	{
		if(playerpositions.containsAll(l)) {
			return "CONGRATULATIONS! You won.";
		}
		else if(cpupositions.containsAll(l))
		{
			return "Cpu wins. Sorry;(";
		}
	}
		if(playerpositions.size() + cpupositions.size()==9){
			return "CAT!";
		}
		
	return "";
}
}
		

	
